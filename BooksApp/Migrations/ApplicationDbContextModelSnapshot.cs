// <auto-generated />
using BooksApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BooksApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BooksApp.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("PublishedBook")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("AuthorDb");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 22,
                            BookId = 1,
                            City = "Turbat",
                            Email = "mohsen@gmail.com",
                            FirstName = "Mohsen",
                            LastName = "Ali",
                            PublishedBook = 45
                        },
                        new
                        {
                            Id = 2,
                            Age = 24,
                            BookId = 2,
                            City = "Karchi",
                            Email = "gul@gmail.com",
                            FirstName = "Gul",
                            LastName = "Buledai",
                            PublishedBook = 20
                        },
                        new
                        {
                            Id = 3,
                            Age = 22,
                            BookId = 3,
                            City = "Buleda",
                            Email = "sameer@gmail.com",
                            FirstName = "Sameer",
                            LastName = "Ali",
                            PublishedBook = 12
                        },
                        new
                        {
                            Id = 4,
                            Age = 22,
                            BookId = 4,
                            City = "Quetta",
                            Email = "meer@gmail.com",
                            FirstName = "Meer",
                            LastName = "Ali",
                            PublishedBook = 21
                        },
                        new
                        {
                            Id = 5,
                            Age = 22,
                            BookId = 5,
                            City = "Gawadar",
                            Email = "javed@gmail.com",
                            FirstName = "Javed",
                            LastName = "Ali",
                            PublishedBook = 19
                        });
                });

            modelBuilder.Entity("BooksApp.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BookTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Pages")
                        .HasColumnType("int");

                    b.Property<int>("RealeseYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BooksDb");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Mohsen Ali",
                            BookTitle = "Code With Mohsen Ali",
                            Pages = 230,
                            RealeseYear = 2019
                        },
                        new
                        {
                            Id = 2,
                            Author = "Gul Buledai",
                            BookTitle = "Code With Gul Buledai",
                            Pages = 160,
                            RealeseYear = 2017
                        },
                        new
                        {
                            Id = 3,
                            Author = "Sameer Ali",
                            BookTitle = "Code With Sameer Ali",
                            Pages = 190,
                            RealeseYear = 2017
                        },
                        new
                        {
                            Id = 4,
                            Author = "Meer Ali",
                            BookTitle = "Code With Meer Ali",
                            Pages = 197,
                            RealeseYear = 2018
                        },
                        new
                        {
                            Id = 5,
                            Author = "Javed Ali",
                            BookTitle = "Code With Javed Ali",
                            Pages = 230,
                            RealeseYear = 2020
                        });
                });

            modelBuilder.Entity("BooksApp.Models.Author", b =>
                {
                    b.HasOne("BooksApp.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });
#pragma warning restore 612, 618
        }
    }
}
